{
 "align_labels_right": 0, 
 "creation": "2018-09-30 14:15:51.897012", 
 "css": ".print-format { padding: 0.25in; }", 
 "custom_format": 1, 
 "default_print_language": "en", 
 "disabled": 0, 
 "doc_type": "Purchase Receipt", 
 "docstatus": 0, 
 "doctype": "Print Format", 
 "font": "Default", 
 "html": "{% macro render_field(df, doc) -%} {%- if df.fieldtype==\"Table\" -%} {{ render_table(df, doc) }} {%- elif df.fieldtype==\"HTML\" -%}\n<div>{{ frappe.render_template(df.options, {\"doc\": doc}) or \"\" }}</div>\n{%- elif df.fieldtype in (\"Text\", \"Text Editor\", \"Code\") -%} {{ render_text_field(df, doc) }} {%- else -%} {{ render_field_with_label(df, doc) }} {%- endif -%} {%- endmacro -%} {%- macro render_table(df, doc) -%} {%- set table_meta = frappe.get_meta(df.options) -%} {%- set data = doc.get(df.fieldname)[df.start:df.end] -%} {%- if doc.print_templates and doc.print_templates.get(df.fieldname) -%} {% include doc.print_templates[df.fieldname] %} {%- else -%} {%- if data -%} {%- set visible_columns = get_visible_columns(doc.get(df.fieldname), table_meta, df) -%}\n<div {{ fieldmeta(df) }}>\n    <table class=\"table table-bordered table-condensed\">\n        <thead>\n            <tr>\n                <th style=\"width: 40px\" class=\"table-sr\">Sr</th>\n                {% for tdf in visible_columns %}\n                <th style=\"width: {{ get_width(tdf) }}px;\" class=\"{{ get_align_class(tdf.fieldtype) }}\" {{ fieldmeta(df) }}>\n                    /PREC%2F1718%2F193{{ _(tdf.label) }}</th>\n                {% endfor %}\n            </tr>\n        </thead>\n        <tbody>\n            {% for d in data %}\n            <tr>\n                <td class=\"table-sr\">{{ d.idx }}</td>\n                {% for tdf in visible_columns %}\n                <td class=\"{{ get_align_class(tdf.fieldtype) }}\" {{ fieldmeta(df) }}>\n                    <div class=\"value\">{{ print_value(tdf, d, table_meta, doc) }}</div>\n                </td>\n                {% endfor %}\n            </tr>\n            {% endfor %}\n        </tbody>\n    </table>\n</div>\n{%- endif -%} {%- endif -%} {%- endmacro -%} {% macro fieldmeta(df) -%} data-fieldname=\"{{ df.fieldname }}\" data-fieldtype=\"{{ df.fieldtype }}\" {%- endmacro %} {%- macro render_field_with_label(df, doc) -%}\n<div class=\"row {% if df.bold %}important{% endif %} data-field\" {{ fieldmeta(df) }}>\n    <div class=\"col-xs-5 text-right\">\n        {% if df.fieldtype not in (\"Image\",\"HTML\") and doc.get(df.fieldname) != None %}\n        <label>{{ _(df.label) }}</label>\n        {% endif %}\n    </div>\n    <div class=\"col-xs-7 {{ get_align_class(df.fieldtype) }} value\">\n        {% if doc.get(df.fieldname) != None -%} {{ print_value(df, doc) }}{% endif %}\n    </div>\n</div>\n{%- endmacro -%} {%- macro render_text_field(df, doc) -%} {%- if doc.get(df.fieldname) != None -%}\n<div style=\"padding: 10px 0px\" {{ fieldmeta(df) }}>\n    {%- if df.fieldtype in (\"Text\", \"Code\") %}\n    <label>{{ _(df.label) }}</label>{%- endif %} {%- if df.fieldtype==\"Code\" %}\n    <pre class=\"value\">{{ doc.get(df.fieldname) }}</pre> {% else -%} {{ doc.get_formatted(df.fieldname, parent_doc or doc) }} {% endif -%}\n</div>\n{%- endif -%} {%- endmacro -%} {%- macro print_value(df, doc, meta, parent_doc=None) -%} {% if doc.print_templates and doc.print_templates.get(df.fieldname) %} {% include doc.print_templates[df.fieldname] %} {% elif df.fieldtype==\"Check\" %}\n<i class=\"{{ 'icon-check' if doc[df.fieldname] else 'icon-check-empty' }}\"></i> {% elif df.fieldtype==\"Image\" %}\n<img src=\"{{ doc[doc.meta.get_field(df.fieldname).options] }}\" class=\"img-responsive\"> {% elif df.fieldtype in (\"Attach\", \"Attach Image\") and doc[df.fieldname] and (guess_mimetype(doc[df.fieldname])[0] or \"\").startswith(\"image/\") %}\n<img src=\"{{ doc[df.fieldname] }}\" class=\"img-responsive\"> {% elif df.fieldtype==\"HTML\" %} {{ frappe.render_template(df.options, {\"doc\":doc}) }} {% else %} {{ doc.get_formatted(df.fieldname, parent_doc or doc, translated=True) }} {% endif %} {%- endmacro %} {% macro get_width(df) -%} {%- if df.print_width -%}{{ (df.print_width|str).replace(\"px\", \"\") }} {%- elif df.fieldtype in (\"Int\", \"Check\", \"Float\", \"Currency\") -%}{{ 80 }} {%- else -%}{{ 150 }}{% endif -%} {%- endmacro %} {% macro get_align_class(fieldtype) %} {%- if fieldtype in (\"Int\", \"Float\", \"Currency\") -%}{{ \"text-right\" }} {%- else -%}{{ \"\" }} {%- endif -%} {% endmacro %} {%- macro add_header(page_num, max_pages, doc, letter_head, no_letterhead, footer) -%} {% if letter_head and not no_letterhead %}\n<div class=\"letter-head\">{{ letter_head }}</div>\n{% endif %} {%- endmacro -%} {% for page in layout %}\n<div class=\"page-break1\">\n    <div {% if print_settings.repeat_header_footer %} id=\"header-html\" class=\"hidden-pdf\" {% endif %}>\n\n        {{ add_header(loop.index, layout|len, doc, letter_head, no_letterhead, footer) }}\n    </div>\n\n    {% if print_settings.repeat_header_footer %}\n    <div id=\"footer-html\" class=\"visible-pdf\">\n        {% if not no_letterhead and footer %}\n        <div class=\"letter-head-footer\">\n            {{ footer }}\n        </div>\n        {% endif %}\n        <p class=\"text-center small page-number visible-pdf\">\n            {{ _(\"Page {0} of {1}\").format('<span class=\"page\"></span>', '<span class=\"topage\"></span>') }}\n        </p>\n    </div>\n    {% endif %}\n\n    <small>\n\t\t<div class=\"row\">        \n\t\t\t <div class=\"col-xs-6\">                    \n\t\t\t</div>\n\t\t\t<div class=\"col-xs-6\">            \n\t\t\t\t<div class=\"row\">\n\t\t\t\t  <h3 class=\"col-xs-12 text-right\">{{ doc.select_print_heading or \"Purchase Receipt\" }}</h3>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-xs-12 text-right\"><big>{{ doc.name or '' }}</big> </div>\n\t\t\t\t</div>               \n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row\">        \n\t\t\t <div class=\"col-xs-6 text-left\">  \n\t\t\t\t<big>{{ doc.supplier_name or '' }} </big> \n\t\t\t</div>\n\t\t\t<div class=\"col-xs-6 text-right\">            \n\t\t\t\t<big>Date: </big> {{ doc.get_formatted(\"posting_date\") or '' }}               \n\t\t\t</div>\n\t\t</div>\n\t\t<br>\n\n\t\t<table class=\"table table-condensed table-hover table-bordered\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"text-left\">Item Code</th>\n\t\t\t\t\t<th class=\"text-left\">Name</th>\n\t\t\t\t\t<th class=\"text-right\">Pallets Ordered</th>\n\t\t\t\t\t<th class=\"text-right\">Ordered Qty</th>\n\t\t\t\t\t<th class=\"text-right\" colspan=\"2\">Received Qty</th>\n\t\t\t\t\t<th class=\"text-right\" colspan=\"2\">Per Unit</th>\n\t\t\t\t</tr>\n\t\t\t\t{% set total_pallets_ordered = namespace(i=0) %}\n\t\t\t\t{% set total_boxes_ordered = namespace(i=0) %}\n\t\t\t\t{%- for row in doc.items -%}\n\t\t\t\t\t{% set total_pallets_ordered.i = total_pallets_ordered.i+row.pallets_ordered %}\n\t\t\t\t\t{% set total_boxes_ordered.i = total_boxes_ordered.i+row.qty_ordered %}\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td style=\"\">{{ row.item_code or ''}}</td>\n\t\t\t\t\t\t<td style=\"\"><b>{{ row.item_name or '' }} </b> </td>\n\t\t\t\t\t\t<td style=\"text-align: right;\" class=\"text-nowrap\">{{ row.get_formatted('pallets_ordered') }}</td>\n\t\t\t\t\t\t<td style=\"text-align: right;\" class=\"text-nowrap\">{{ row.get_formatted('qty_ordered') }}</td>\n\t\t\t\t\t\t<td style=\"text-align: right;\" class=\"text-nowrap\"><b>{{ row.get_formatted('qty') }}</b></td>\n\t\t\t\t\t\t<td style=\"text-align: right;\" class=\"text-nowrap\">{{ row.uom }}</td>\n\t\t\t\t\t\t<td style=\"text-align: right;\" class=\"text-nowrap\">{{ row.get_formatted('alt_uom_size') }}</td>\n\t\t\t\t\t\t<td style=\"text-align: right;\" class=\"text-nowrap\">{{ row.alt_uom }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t{%- endfor -%}\n\t\t\t\t<tr>\n\t\t\t\t\t<th colspan=\"2\" class=\"text-right\">Total:</th>\n\t\t\t\t\t<th class=\"text-right\">{{ frappe.format_value(total_pallets_ordered.i, doc.meta.get_field('total_pallets')) }}</th>\n\t\t\t\t\t<th class=\"text-right\">{{ frappe.format_value(total_boxes_ordered.i, doc.meta.get_field('total_qty')) }}</th>\n\t\t\t\t\t<th class=\"text-right\">{{ doc.get_formatted('total_qty') }}</th>\n\t\t\t\t\t<th></th>\n\t\t\t\t\t<th></th>\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</small>\n\n</div>\n{% endfor %}", 
 "idx": 0, 
 "line_breaks": 0, 
 "modified": "2019-08-17 14:00:50.833280", 
 "modified_by": "Administrator", 
 "module": "Stock", 
 "name": "SD - PREC", 
 "owner": "vkb@sundinepro.com", 
 "print_format_builder": 1, 
 "print_format_type": "Server", 
 "show_section_headings": 0, 
 "standard": "Yes"
}